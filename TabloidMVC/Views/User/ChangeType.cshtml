@model TabloidMVC.Models.ViewModels.UserProfileTypeViewModel

@{
    ViewData["Title"] = "ChangeType";
}

<h1>Change User Type for @Model.user.DisplayName</h1>
@if (!String.IsNullOrEmpty(Model.ErrorMsg))
{
    <div class="alert alert-danger">@Model.ErrorMsg</div>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ChangeType">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="@Model.user.Id" type="hidden" class="form-control" />
                <span asp-validation-for="@Model.user.Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="@Model.olduser.UserTypeId" type="hidden" class="form-control" />
                <span asp-validation-for="@Model.olduser.UserTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.user.UserTypeId" class="control-label">User Type</label>
                <select asp-for="@Model.user.UserTypeId" class="form-control">
                    <option value="">Select Type</option>
                    @foreach (UserType userType in Model.type)
                    {
                        <option value="@userType.Id">@userType.Name</option>
                    }
                </select>
                <span asp-validation-for="@Model.user.UserTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
